name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - xuantie-gnu-toolchain
  pull_request:
    branches:
      - xuantie-gnu-toolchain

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:     [ubuntu-latest]
        mode:   [newlib, linux]
        target: [rv32gc-ilp32d, rv64gc-lp64d]
        include: 
          - os: ubuntu-latest
            apt: 1
          - os: macos-11
            brew: 1
    steps:
      - uses: actions/checkout@v2
      - name: install ubuntu dependencies
        if: ${{ matrix.apt }}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev \
            libgmp-dev gawk build-essential bison flex texinfo gperf libtool \
            patchutils bc zlib1g-dev libexpat-dev git

      - name: install macos dependencies
        if: ${{ matrix.brew }}
        run: |
          brew install coreutils python3 gawk gnu-sed gmp mpfr libmpc isl zlib expat

      - name: get necessary submodules
        run: |
          git submodule update --init --recursive riscv-binutils
          git submodule update --init --recursive riscv-gcc
          git submodule update --init --recursive riscv-gdb
          git submodule update --init --recursive riscv-newlib

      - name: patch macos
        if: ${{ matrix.brew }}
        run: |
          sed -i '' "s/.*=host-darwin.o$//" riscv-gcc/gcc/config.host
          sed -i '' "s/.* x-darwin.$//" riscv-gcc/gcc/config.host

      - name: build toolchain
        run: |
          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
          ./configure --prefix=/opt/riscv --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]}
          sudo make ${{ matrix.mode }}

      - name: tarball build
        run: tar czvf riscv.tar.gz -C /opt/ riscv/

      - name: generate prebuilt toolchain name
        id:   toolchain-name-generator
        run: |
          if [[ "${{ matrix.target }}" == *"32"* ]]; then BITS=32; else BITS=64; fi
          if [[ "${{ matrix.mode }}" == "linux" ]]; then MODE="glibc"; else MODE="elf"; fi
          echo ::set-output name=TOOLCHAIN_NAME::riscv$BITS-$MODE-${{ matrix.os }}-nightly

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.toolchain-name-generator.outputs.TOOLCHAIN_NAME }}
          path: riscv.tar.gz
