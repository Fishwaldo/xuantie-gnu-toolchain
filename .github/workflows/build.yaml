name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - xuantie-gnu-toolchain
  pull_request:
    branches:
      - xuantie-gnu-toolchain

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:     [ubuntu-latest]
        mode:   [newlib, linux]
        include: 
          - os: ubuntu-latest
            apt: 1
#          - os: macos-11
#            brew: 1
    steps:
      - uses: actions/checkout@v2
      - name: install ubuntu dependencies
        if: ${{ matrix.apt }}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev \
            libgmp-dev gawk build-essential bison flex texinfo gperf libtool \
            patchutils bc zlib1g-dev libexpat-dev git

      - name: install macos dependencies
        if: ${{ matrix.brew }}
        run: |
          brew install coreutils python3 gawk gnu-sed gmp mpfr libmpc isl zlib expat

      - name: get necessary submodules
        run: |
          git submodule update --init --recursive riscv-binutils
          git submodule update --init --recursive riscv-gcc
          git submodule update --init --recursive riscv-gdb
          git submodule update --init --recursive riscv-newlib
          git submodule update --init --recursive riscv-glibc

      - name: patch macos
        if: ${{ matrix.brew }}
        run: |
          sed -i '' "s/.*=host-darwin.o$//" riscv-gcc/gcc/config.host
          sed -i '' "s/.* x-darwin.$//" riscv-gcc/gcc/config.host

      - name: build toolchain
        run: |
          ./configure --prefix=${{ github.workspace }}/riscv --with-cmodel=medany --enable-multilib --enable-gdb
          make -j $(nproc) ${{ matrix.mode }}

      - name: tarball build
        run: |
          ls -lah
          ls -lah ${{ github.workspace }}/riscv/
          pwd
          tar czvf ${{ github.workspace }}/toolchan-${{ matrix.mode }}-${{ matrix.os }}.tar.gz -C ${{ github.workspace }}/riscv/
          echo "TOOLCHAIN=${{ github.workspace }}/toolchan-${{ matrix.mode }}-${{ matrix.os }}.tar.gz" >> $GITHUB_ENV

      - name: Upload Firmware
        uses: actions/upload-artifact@master
        with:
          name: toolchan-${{ matrix.mode }}-${{ matrix.os }}
          path: |
            ${{env.TOOLCHAIN}}    
